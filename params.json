{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Tunlr Clone","google":"","body":"Tunlr-Clone\r\n===========\r\nTo build a tunlr or UnoTelly or unblock-us.com (or other DNS-based services), you need to invest in a VPS.\r\nFor the purposes of this discussion, I am assuming that you will be using this for watching US geo-locked content.\r\n##US IP Address##\r\nYour VPS provider must provide you with a US IP address\r\n##Tomato based router##\r\nSince you will be changing DNS servers to point to your \"own\" DNS, it makes sense to run `dnsmasq` on your router,\r\ntherefore having a Tomato capable router is preferable.\r\n\r\nFollowing is my `dnsmasq` configuration on my Tomato-based router (running a Toastman build):\r\n`Advanced -> DHCP/DNS -> Dnsmasq Custom configuration`\r\n\r\n    # Never forward plain names (without a dot or domain part)\r\n    domain-needed\r\n    # Never forward addresses in the non-routed address spaces.\r\n    bogus-priv\r\n    \r\n    # If you don't want dnsmasq to read /etc/resolv.conf or any other\r\n    # file, getting its servers from this file instead (see below), then\r\n    # uncomment this.\r\n    no-resolv\r\n    \r\n    # If you don't want dnsmasq to poll /etc/resolv.conf or other resolv\r\n    # files for changes and re-read them then uncomment this.\r\n    no-poll\r\n    \r\n    # tunlr for hulu\r\n    server=/hulu.com/199.x.x.x\r\n    server=/huluim.com/199.x.x.x\r\n    # tunlr for US networks\r\n    # cbs works with link.theplatform.com\r\n    server=/abc.com/abc.go.com/199.x.x.x\r\n    server=/fox.com/link.theplatform.com/199.x.x.x\r\n    server=/nbc.com/nbcuni.com/199.x.x.x\r\n    server=/ip2location.com/199.x.x.x\r\n    # espn3 \r\n    server=/broadband.espn.go.com/199.x.x.x\r\n    \r\n    # Google\r\n    server=8.8.8.8\r\n    server=8.8.4.4\r\n    # OpenDNS\r\n    #server=208.67.222.222\r\n    #server=208.67.220.220\r\nIn essence, I am forwarding DNS queries to my VPS only for the specified domans. Everything else goes to Google DNS\r\n(or can easily go to your ISP DNS).\r\n\r\n##Your own DNS Server##\r\nI am running bind9 on my VPS to override the DNS resolution for the entire domans mentioned above.\r\nThe plan is to send the external IP address of my VPS as the resolved IP address for any of those domains.\r\n\r\nOnce the web traffic hits my VPS, I use iptables to redirect port 80 traffic to squid running on port 8xxx.\r\n\r\nHere is the bind9 config:\r\n\r\n`/etc/bind/named.conf.options`\r\n\r\n    options {\r\n      directory \"/var/cache/bind\";\r\n    \tforwarders {\r\n            # these are the DNS servers from the VPS provider (look in /etc/resolv.conf if yours are different)\r\n    \t\t199.195.255.68;\r\n    \t\t199.195.255.69;\r\n    \t};\r\n    \r\n    \tauth-nxdomain no;    # conform to RFC1035\r\n    \tlisten-on-v6 { any; };\r\n    \tallow-query { trusted; };\r\n    \tallow-recursion { trusted; };\r\n    \trecursion yes;\r\n    \tdnssec-enable no;\r\n    \tdnssec-validation no;\r\n    };\r\n\r\n`/etc/bind/named.conf.local`\r\n\r\n    //\r\n    // Do any local configuration here\r\n    //\r\n    \r\n    // Consider adding the 1918 zones here, if they are not used in your\r\n    // organization\r\n    //include \"/etc/bind/zones.rfc1918\";\r\n    \r\n    include \"/etc/bind/rndc.key\";\r\n    \r\n    acl \"trusted\" {\r\n        172.x.x.x;        // local venet0:1 internal IP here\r\n        127.0.0.1;\r\n        173.x.x.x;        // Your ISP IP here (cable/DSL)\r\n    };\r\n    \r\n    include \"/etc/bind/zones.override\";\r\n    \r\n    logging {\r\n        channel bind_log {\r\n            file \"/var/log/named/named.log\" versions 5 size 30m;\r\n            severity info;\r\n            print-time yes;\r\n            print-severity yes;\r\n            print-category yes;\r\n        };\r\n        category default { bind_log; };\r\n        category queries { bind_log; };\r\n    };\r\n\r\n`/etc/bind/zones.override`\r\n\r\n    zone \"hulu.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"huluim.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"abc.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"abc.go.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"fox.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"link.theplatform.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"nbc.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"nbcuni.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"broadband.espn.go.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n    zone \"ip2location.com.\" {\r\n        type master;\r\n        file \"/etc/bind/db.override\";\r\n    };\r\n\r\n`/etc/bind/db.override`\r\n\r\n    ;\r\n    ; BIND data file for overridden IPs\r\n    ;\r\n    $TTL  86400\r\n    @   IN  SOA ns1 root (\r\n                2012100401  ; serial\r\n                604800      ; refresh 1w\r\n                86400       ; retry 1d\r\n                2419200     ; expiry 4w\r\n                86400       ; minimum TTL 1d\r\n                )\r\n    \r\n    ; need atleast a nameserver\r\n        IN  NS  ns1\r\n    ; specify nameserver IP address\r\n    ns1 IN  A   199.y.y.y                ; external IP from venet0:0\r\n    ; provide IP address for domain itself\r\n    @   IN  A   199.y.y.y                ; external IP from venet0:0\r\n    ; resolve everything with the same IP address as ns1\r\n    *   IN  A   199.y.y.y                 ; external IP from venet0:0\r\n\r\nWhen you discover a new domain that you want to \"master\", simply add it to the `zones.override` file and restart bind9.\r\n\r\n##Squid##\r\n`/etc/squid3/squid.conf`\r\n\r\n    # grep '^[^#]' /etc/squid3/squid.conf\r\n    acl manager proto cache_object\r\n    acl localhost src 127.0.0.1/32 ::1\r\n    acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1\r\n    acl trusted src 172.x.x.x 173.y.y.y        # internal IP from venet0:1 and ISP IP (Cable/DSL)\r\n    acl SSL_ports port 443\r\n    acl Safe_ports port 80  \t# http\r\n    acl Safe_ports port 21\t\t# ftp\r\n    acl Safe_ports port 443\t\t# https\r\n    acl Safe_ports port 70\t\t# gopher\r\n    acl Safe_ports port 210\t\t# wais\r\n    acl Safe_ports port 1025-65535\t# unregistered ports\r\n    acl Safe_ports port 280\t\t# http-mgmt\r\n    acl Safe_ports port 488\t\t# gss-http\r\n    acl Safe_ports port 591\t\t# filemaker\r\n    acl Safe_ports port 777\t\t# multiling http\r\n    acl CONNECT method CONNECT\r\n    http_access allow manager localhost\r\n    http_access deny manager\r\n    http_access deny !Safe_ports\r\n    http_access deny CONNECT !SSL_ports\r\n    http_access allow trusted\r\n    http_access allow localhost\r\n    http_access deny all\r\n    http_port 0.0.0.0:8128 transparent\r\n    hierarchy_stoplist cgi-bin ?\r\n    debug_options ALL,3\r\n    coredump_dir /var/spool/squid3\r\n\r\n##Iptables##\r\nOn the iptables side, for `filter` you need (where 172.x.x.x is the venet0:1 internal IP address):\r\n\r\n    -A INPUT -i venet0 -d 172.x.x.x -p tcp -m tcp --dport 8128 -j ACCEPT\r\n\r\nFor the `nat` side, you need:\r\n\r\n    -A PREROUTING -i venet0 -p tcp --dport 80 -j DNAT --to 172.x.x.x:8128","tagline":"Use a cheap VPS to make a Tunlr Clone"}